/* tslint:disable */
/* eslint-disable */
/**
 * The Golden Book API
 * API for a book-selling business
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@thegoldenbook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Review
 */
export interface Review {
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    bookId?: number;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    bookName?: string;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    authorId?: number;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    authorName?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    authorLastName?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    authorSecondLastName?: string;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    userLastName?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    userSecondLastName?: string;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    body?: string;
    /**
     * 
     * @type {Date}
     * @memberof Review
     */
    publicationDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    languageId?: number;
}

/**
 * Check if a given object implements the Review interface.
 */
export function instanceOfReview(value: object): value is Review {
    return true;
}

export function ReviewFromJSON(json: any): Review {
    return ReviewFromJSONTyped(json, false);
}

export function ReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Review {
    if (json == null) {
        return json;
    }
    return {
        
        'bookId': json['bookId'] == null ? undefined : json['bookId'],
        'bookName': json['bookName'] == null ? undefined : json['bookName'],
        'authorId': json['authorId'] == null ? undefined : json['authorId'],
        'authorName': json['authorName'] == null ? undefined : json['authorName'],
        'authorLastName': json['authorLastName'] == null ? undefined : json['authorLastName'],
        'authorSecondLastName': json['authorSecondLastName'] == null ? undefined : json['authorSecondLastName'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'userLastName': json['userLastName'] == null ? undefined : json['userLastName'],
        'userSecondLastName': json['userSecondLastName'] == null ? undefined : json['userSecondLastName'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'subject': json['subject'] == null ? undefined : json['subject'],
        'body': json['body'] == null ? undefined : json['body'],
        'publicationDate': json['publicationDate'] == null ? undefined : (new Date(json['publicationDate'])),
        'languageId': json['languageId'] == null ? undefined : json['languageId'],
    };
}

export function ReviewToJSON(json: any): Review {
    return ReviewToJSONTyped(json, false);
}

export function ReviewToJSONTyped(value?: Review | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bookId': value['bookId'],
        'bookName': value['bookName'],
        'authorId': value['authorId'],
        'authorName': value['authorName'],
        'authorLastName': value['authorLastName'],
        'authorSecondLastName': value['authorSecondLastName'],
        'userId': value['userId'],
        'nickname': value['nickname'],
        'userName': value['userName'],
        'userLastName': value['userLastName'],
        'userSecondLastName': value['userSecondLastName'],
        'rating': value['rating'],
        'subject': value['subject'],
        'body': value['body'],
        'publicationDate': value['publicationDate'] == null ? undefined : ((value['publicationDate']).toISOString()),
        'languageId': value['languageId'],
    };
}

