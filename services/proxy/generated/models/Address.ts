/* tslint:disable */
/* eslint-disable */
/**
 * The Golden Book API
 * API for a book-selling business
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@thegoldenbook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * 
     * @type {number}
     * @memberof Address
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    streetName?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    addressLine2?: string;
    /**
     * 
     * @type {number}
     * @memberof Address
     */
    localityId?: number;
    /**
     * 
     * @type {number}
     * @memberof Address
     */
    userId?: number;
    /**
     * 
     * @type {number}
     * @memberof Address
     */
    employeeId?: number;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    localityName?: string;
    /**
     * 
     * @type {number}
     * @memberof Address
     */
    regionId?: number;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    regionName?: string;
    /**
     * 
     * @type {number}
     * @memberof Address
     */
    countryId?: number;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    countryName?: string;
}

/**
 * Check if a given object implements the Address interface.
 */
export function instanceOfAddress(value: object): value is Address {
    return true;
}

export function AddressFromJSON(json: any): Address {
    return AddressFromJSONTyped(json, false);
}

export function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'streetName': json['streetName'] == null ? undefined : json['streetName'],
        'addressLine2': json['addressLine2'] == null ? undefined : json['addressLine2'],
        'localityId': json['localityId'] == null ? undefined : json['localityId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'employeeId': json['employeeId'] == null ? undefined : json['employeeId'],
        'localityName': json['localityName'] == null ? undefined : json['localityName'],
        'regionId': json['regionId'] == null ? undefined : json['regionId'],
        'regionName': json['regionName'] == null ? undefined : json['regionName'],
        'countryId': json['countryId'] == null ? undefined : json['countryId'],
        'countryName': json['countryName'] == null ? undefined : json['countryName'],
    };
}

export function AddressToJSON(json: any): Address {
    return AddressToJSONTyped(json, false);
}

export function AddressToJSONTyped(value?: Address | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'streetName': value['streetName'],
        'addressLine2': value['addressLine2'],
        'localityId': value['localityId'],
        'userId': value['userId'],
        'employeeId': value['employeeId'],
        'localityName': value['localityName'],
        'regionId': value['regionId'],
        'regionName': value['regionName'],
        'countryId': value['countryId'],
        'countryName': value['countryName'],
    };
}

